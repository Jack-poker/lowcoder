create table
  public.permit_data_for_search (
    id bigint generated by default as identity not null,
    permittype text null default ''::text,
    permit_type_desc text null default ''::text,
    permit_number text null default ''::text,
    permit_class_mapped text null default ''::text,
    permit_class text null default ''::text,
    work_class text null default ''::text,
    condominium text null default ''::text,
    permit_location text null default ''::text,
    description text null default ''::text,
    tcad_id text null default ''::text,
    applieddate text null default ''::text,
    issue_date text null default ''::text,
    day_issued text null default ''::text,
    calendar_year_issued bigint null,
    fiscal_year_issued bigint null,
    issued_in_last_30_days text null default ''::text,
    issue_method text null default ''::text,
    status_current text null default ''::text,
    statusdate text null default ''::text,
    expiresdate text null default ''::text,
    remodel_repair_sqft text null default ''::text,
    number_of_floors text null default ''::text,
    housing_units text null default ''::text,
    original_address_1 text null default ''::text,
    original_city text null default ''::text,
    original_state text null default ''::text,
    original_zip text null default ''::text,
    council_district text null default ''::text,
    jurisdiction text null default ''::text,
    project_id bigint null,
    masterpermitnum text null default ''::text,
    latitude text null default ''::text,
    longitude text null default ''::text,
    contractor_trade text null default ''::text,
    contractor_company_name text null default ''::text,
    contractor_full_name text null default ''::text,
    contractor_phone text null default ''::text,
    contractor_address_2 text null default ''::text,
    contractor_city text null default ''::text,
    contractor_zip text null default ''::text,
    certificate_of_occupancy text null default ''::text,
    legal_description text null default ''::text,
    applieddate_new text null default ''::text,
    issue_date_new timestamp with time zone null,
    statusdate_new timestamp with time zone null,
    expiresdate_new timestamp with time zone null,
    contractor_address_1 text null default ''::text,
    project_name text null default ''::text,
    completed_date text null default ''::text,
    total_existing_bldg_sqft text null default ''::text,
    total_new_add_sqft text null default ''::text,
    link text null default ''::text,
    completed_date_new timestamp with time zone null,
    applieddate_new_new timestamp with time zone null,
    fts tsvector generated always as (
      to_tsvector(
        'english'::regconfig,
        (
          (
            (
              (
                (
                  (
                    (
                      (
                        (
                          (
                            (
                              (
                                (
                                  (
                                    (
                                      (
                                        (
                                          (
                                            (
                                              (
                                                (
                                                  (
                                                    (
                                                      (
                                                        ((permit_type_desc || ' '::text) || description) || ' '::text
                                                      ) || contractor_company_name
                                                    ) || ' '::text
                                                  ) || status_current
                                                ) || ' '::text
                                              ) || permit_number
                                            ) || ' '::text
                                          ) || permit_location
                                        ) || ' '::text
                                      ) || work_class
                                    ) || ' '::text
                                  ) || original_city
                                ) || ' '::text
                              ) || original_state
                            ) || ' '::text
                          ) || permit_class_mapped
                        ) || ' '::text
                      ) || original_zip
                    ) || ' '::text
                  ) || applieddate
                ) || ' '::text
              ) || issue_date
            ) || ' '::text
          ) || expiresdate
        )
      )
    ) stored null,
    constraint permit_data_for_search_pkey primary key (id)
  ) tablespace pg_default;

create index if not exists permit_data_for_search_status_current_idx on public.permit_data_for_search using btree (status_current) tablespace pg_default;

create index if not exists permit_data_for_search_applieddate_applieddate_new_appliedd_idx on public.permit_data_for_search using btree (applieddate, applieddate_new, applieddate_new_new) tablespace pg_default;

create index if not exists permit_data_for_search_permit_number_idx on public.permit_data_for_search using btree (permit_number) tablespace pg_default;

create index if not exists permit_data_for_search_issue_date_new_idx on public.permit_data_for_search using btree (issue_date_new) tablespace pg_default;

create index if not exists permit_data_for_search_contractor_company_name_idx on public.permit_data_for_search using btree (contractor_company_name) tablespace pg_default;

create index if not exists permit_data_for_search_work_class_permit_class_idx on public.permit_data_for_search using btree (work_class, permit_class) tablespace pg_default;

create index if not exists permit_data_for_search_description_idx on public.permit_data_for_search using btree (description) tablespace pg_default;

create index if not exists permit_data_for_search_permit_location_idx on public.permit_data_for_search using btree (permit_location) tablespace pg_default;

create index if not exists permit_data_for_search_work_class_idx on public.permit_data_for_search using btree (work_class) tablespace pg_default;

create index if not exists permit_data_for_search_permit_class_mapped_idx on public.permit_data_for_search using btree (permit_class_mapped) tablespace pg_default;

create index if not exists permit_data_for_search_original_city_idx on public.permit_data_for_search using btree (original_city) tablespace pg_default;

create index if not exists permit_data_for_search_original_state_idx on public.permit_data_for_search using btree (original_state) tablespace pg_default;

create index if not exists permit_data_for_search_original_zip_idx on public.permit_data_for_search using btree (original_zip) tablespace pg_default;

create index if not exists fts_index on public.permit_data_for_search using gin (fts) tablespace pg_default;

create index if not exists permit_data_for_search_permit_type_desc_idx on public.permit_data_for_search using btree (permit_type_desc) tablespace pg_default;

create table
  public.followed_permit_new (
    id bigint generated by default as identity not null,
    created_at timestamp with time zone null default now(),
    permit_id bigint null,
    user_id uuid null,
    jurisdiction text null,
    constraint followed_permit_new_pkey primary key (id)
  ) tablespace pg_default;

create index if not exists followed_permit_new_user_id_idx on public.followed_permit_new using btree (user_id) tablespace pg_default;

create view
  public.new_permits_data as
select
  permit_data_for_search.id,
  permit_data_for_search.permit_type_desc,
  permit_data_for_search.status_current,
  to_char(
    permit_data_for_search.expiresdate_new,
    'mm-dd-yyyy'::text
  ) as expiresdate_new,
  to_char(
    permit_data_for_search.issue_date_new,
    'mm-dd-yyyy'::text
  ) as issue_date_new,
  to_char(
    permit_data_for_search.applieddate_new_new,
    'mm-dd-yyyy'::text
  ) as applieddate_new,
  permit_data_for_search.permit_number,
  permit_data_for_search.permit_location,
  permit_data_for_search.work_class,
  permit_data_for_search.description,
  permit_data_for_search.original_city,
  permit_data_for_search.original_state,
  permit_data_for_search.contractor_company_name,
  case
    when permit_data_for_search.status_current = any (array['Final'::text, 'Closed'::text]) then permit_data_for_search.status_current
    when permit_data_for_search.expiresdate_new < now() then 'Expired'::text
    when permit_data_for_search.status_current = 'Active'::text
    and permit_data_for_search.expiresdate_new < (now() + '21 days'::interval) then 'Expiring Soon'::text
    else permit_data_for_search.status_current
  end as updated_status,
  permit_data_for_search.project_name,
  permit_data_for_search.permit_class_mapped,
  permit_data_for_search.link,
  permit_data_for_search.original_zip,
  permit_data_for_search.fts
from
  permit_data_for_search
order by
  permit_data_for_search.calendar_year_issued desc;
	
create view
  public.allfollowedpermits as
select
  permit_data_for_search.id,
  permit_data_for_search.permittype,
  permit_data_for_search.permit_type_desc,
  permit_data_for_search.permit_number,
  permit_data_for_search.permit_class_mapped,
  permit_data_for_search.permit_class,
  permit_data_for_search.work_class,
  permit_data_for_search.condominium,
  permit_data_for_search.permit_location,
  permit_data_for_search.description,
  permit_data_for_search.tcad_id,
  permit_data_for_search.applieddate,
  permit_data_for_search.issue_date,
  permit_data_for_search.day_issued,
  permit_data_for_search.calendar_year_issued,
  permit_data_for_search.fiscal_year_issued,
  permit_data_for_search.issued_in_last_30_days,
  permit_data_for_search.issue_method,
  permit_data_for_search.status_current,
  permit_data_for_search.statusdate,
  permit_data_for_search.expiresdate,
  permit_data_for_search.remodel_repair_sqft,
  permit_data_for_search.number_of_floors,
  permit_data_for_search.housing_units,
  permit_data_for_search.original_address_1,
  permit_data_for_search.original_city,
  permit_data_for_search.original_state,
  permit_data_for_search.original_zip,
  permit_data_for_search.council_district,
  permit_data_for_search.jurisdiction,
  permit_data_for_search.project_id,
  permit_data_for_search.masterpermitnum,
  permit_data_for_search.latitude,
  permit_data_for_search.longitude,
  permit_data_for_search.contractor_trade,
  permit_data_for_search.contractor_company_name,
  permit_data_for_search.contractor_full_name,
  permit_data_for_search.contractor_phone,
  permit_data_for_search.contractor_address_2,
  permit_data_for_search.contractor_city,
  permit_data_for_search.contractor_zip,
  permit_data_for_search.certificate_of_occupancy,
  permit_data_for_search.legal_description,
  permit_data_for_search.applieddate_new,
  permit_data_for_search.issue_date_new,
  permit_data_for_search.statusdate_new,
  permit_data_for_search.expiresdate_new
from
  permit_data_for_search
where
  (
    permit_data_for_search.id in (
      select
        followed_permit_new.permit_id
      from
        followed_permit_new
    )
  );
	
create table
  public.user_master (
    id bigint generated by default as identity not null,
    created_at timestamp with time zone null default now(),
    first_name text null,
    last_name text null,
    user_type text null,
    user_city text null,
    user_state text null,
    user_zip_code text null,
    user_phone_number text null,
    user_company text null,
    business_type text null,
    user_activated boolean null,
    address text null,
    user_email text null,
    password text null,
    user_id uuid not null default gen_random_uuid (),
    constraint user_master_pkey primary key (id),
    constraint user_master_user_id_key unique (user_id),
    constraint user_master_user_id_fkey foreign key (user_id) references auth.users (id) on update cascade on delete cascade
  ) tablespace pg_default;